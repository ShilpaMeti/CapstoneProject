package com.example.rest.expense.config;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

//Optional-Java code to connect to Database manually
public class DatabaseConfig {

     public void configure(){
         try {
             // Load PostgreSQL JDBC driver
             Class.forName("org.postgresql.Driver");

             //SQL Basics
             // Establish connection
             String url = "jdbc:postgresql://localhost:5432/expensedb";
             String user = "postgres";
             String password = "postgres";
             Connection conn = DriverManager.getConnection(url, user, password);

             // Create a Statement
             Statement stmt = conn.createStatement();

             // Create Table (Expenses)
             String createTableSQL = "CREATE TABLE IF NOT EXISTS Expenses (id bigint generated by default as identity, amount float(53) not null, date timestamp(6), description varchar(255), primary key (id))";
             stmt.execute(createTableSQL);

             // Insert Data into Expenses table
             String insertSQL = "INSERT INTO Expenses (amount, description, date) VALUES (100.0, 'Dinner', '2024-12-25)";
             stmt.executeUpdate(insertSQL);

             // Read Data from Expenses table
             String selectSQL = "SELECT * FROM Expenses";

             // Result set
             ResultSet rs = stmt.executeQuery(selectSQL);

             while (rs.next()) {
                 int id = rs.getInt("id");
                 double amount = rs.getFloat("amount");
                 System.out.println("ID: " + id + ", Amount: " + amount);
             }

             // Optional- Update Data in Expenses table
             String updateSQL = "UPDATE Expenses SET amount = 120.0 WHERE id = 1";
             stmt.executeUpdate(updateSQL);

             // Delete Data from Expenses table
             String deleteSQL = "DELETE FROM Expenses WHERE id = 1";
             stmt.executeUpdate(deleteSQL);

             // Close resources
             rs.close();
             stmt.close();
             conn.close();
         } catch (Exception e) {
             e.printStackTrace();
         }
     }

}
